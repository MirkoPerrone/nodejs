/*! mongoose-es6 2015-10-23 */
"use strict";var express=require("express"),bodyParser=require("body-parser"),http=require("http"),morgan=require("morgan"),mongoose=require("mongoose"),co=require("co"),app=express(),db;app.use(bodyParser.json()),app.use(bodyParser.urlencoded({extended:!1})),app.use(morgan("combined"));var PersonaSchema=mongoose.Schema({nome:String,cognome:String,indirizzo:String},{collection:"persone"}),PersonaModel=mongoose.model("Persona",PersonaSchema),PersonaCountPromise=new Promise(function(a,b){PersonaModel.count({},function(c,d){c?b(c):a(d)})}),p1=new Promise(function(a,b){a({nome:"Pippo",cognome:"Pluto"})}),main=function(){console.log("Express server listening on port 3000"),co(regeneratorRuntime.mark(function a(){var b,c;return regeneratorRuntime.wrap(function(a){for(;;)switch(a.prev=a.next){case 0:return a.prev=0,a.next=3,PersonaCountPromise;case 3:return b=a.sent,console.log("COUNT: "+b),a.next=7,p1;case 7:c=a.sent,console.log("COUNT: "+JSON.stringify(c)),a.next=14;break;case 11:a.prev=11,a.t0=a["catch"](0),console.error(a.t0.message);case 14:case"end":return a.stop()}},a,this,[[0,11]])}))["catch"](function(a){console.log(a.stack)})};mongoose.connect("mongodb://localhost:27017/protsrv"),db=mongoose.connection,db.on("error",console.error.bind(console,"connection error: ")),db.once("open",function(){console.log("Connected to MongoDb"),http.createServer(app).listen(3e3,"localhost",main)});